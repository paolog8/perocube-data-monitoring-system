services:
  # TimescaleDB (PostgreSQL) service
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    #build: ./db
    container_name: perocube-postgres
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_DB=${DB_NAME:-perocube}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/scripts:/scripts
      - ./db/sql:/sql
      # following line not needed when using the Dockerfile in db/
      - ./db/sql/schema:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-perocube}"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    networks:
      - perocube-network

  # Flyway service for database migrations
  flyway:
    image: flyway/flyway:11-alpine
    container_name: perocube-flyway
    command: -url=jdbc:postgresql://timescaledb:5432/${DB_NAME:-perocube} -user=${DB_USER:-postgres} -password=${DB_PASSWORD} -connectRetries=60 migrate
    volumes:
      - ./db/migrations:/flyway/sql
    depends_on:
      timescaledb:
        condition: service_healthy
    networks:
      - perocube-network

  # JupyterHub service
  jupyterhub:
    # image: jupyter/datascience-notebook:latest
    build: ./jupyter
    container_name: perocube-jupyter
    user: root
    environment:
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-jupytertoken}  # Set this in .env file
      - POSTGRES_HOST=timescaledb
      - POSTGRES_DB=${DB_NAME:-perocube}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_PORT=${DB_PORT:-5432}
    ports:
      - "8888:8888"      # Jupyter port
      - "8866:8866"      # Voilà port
    volumes:
      - jupyter-data:/home/jovyan/work
      - ./notebooks:/home/jovyan/notebooks
      - ./sample_data:/home/jovyan/sample_data
    depends_on:
      timescaledb:
        condition: service_healthy
    restart: unless-stopped
    command:
      - start-notebook.sh
      - --NotebookApp.token=${JUPYTER_TOKEN:-jupytertoken}
      #>
      #bash -c "pip install voila ipywidgets &&
    networks:
      - perocube-network
  # Voilà dashboards will run through the Jupyter service
  # You can access any notebook as a dashboard via:
  # http://localhost:8888/voila/render/notebooks/YourNotebook.ipynb

volumes:
  postgres-data:
    driver: local
  jupyter-data:
    driver: local

networks:
  perocube-network:
    driver: bridge
